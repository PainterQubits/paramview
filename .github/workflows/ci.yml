name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  POETRY_VERSION: "1.7.1"
  PYTHON_VERSION: "3.9"
  PACKAGE_NAME: "paramview"

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Poetry
        run: pipx install poetry==${{ env.POETRY_VERSION }}

      - name: Set up Python with Poetry cache
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry

      - name: Install Python dependencies
        run: poetry install

      - name: Check Formatting (Black)
        run: poetry run black ${{ env.PACKAGE_NAME }} tests --check

      - name: Lint (Flake8)
        run: poetry run flake8 ${{ env.PACKAGE_NAME }} tests

      - name: Lint (Pylint)
        run: poetry run pylint ${{ env.PACKAGE_NAME }} tests

      - name: Mypy cache
        uses: actions/cache@v3
        with:
          path: .mypy_cache
          key: mypy-${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-${{ github.sha }}
          restore-keys: |
            mypy-${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-

      - name: Type Check (Mypy)
        run: poetry run mypy ${{ env.PACKAGE_NAME }} tests

      - name: Test (Pytest)
        run: poetry run pytest

  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Enable Yarn
        run: corepack enable

      - name: Get Cypress version
        id: cypress-version
        run: echo VERSION=$(yarn info cypress --json | jq ".children.Version" -r) >> $GITHUB_OUTPUT

      - name: Cypress cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ steps.cypress-version.outputs.VERSION }}
          restore-keys: |
            cypress-${{ runner.os }}-

      - name: Install Node.js dependencies
        run: yarn

      - name: Prune Cypress cache
        run: yarn cypress cache prune

      - name: Lint
        run: yarn lint

      - name: Unit tests
        run: yarn test:unit

  e2e:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Poetry
        run: pipx install poetry==${{ env.POETRY_VERSION }}

      - name: Set up Python with Poetry cache
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry

      - name: Install Python dependencies
        run: poetry install

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Enable Yarn
        run: corepack enable

      - name: Get Cypress version
        id: cypress-version
        run: echo VERSION=$(yarn info cypress --json | jq ".children.Version" -r) >> $GITHUB_OUTPUT

      - name: Cypress cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ steps.cypress-version.outputs.VERSION }}
          restore-keys: |
            cypress-${{ runner.os }}-

      - name: Install Node.js dependencies
        run: yarn

      - name: Prune Cypress cache
        run: yarn cypress cache prune

      - name: Build frontend
        run: yarn build

      - name: Start backend server
        run: yarn backend start &

      - name: Start frontend server
        run: yarn preview &

      - name: E2E tests
        run: yarn test:e2e

      - name: Upload failure screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-failure-screenshots
          path: cypress/screenshots
