name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  # backend:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up backend
  #       uses: ./.github/actions/set-up-backend

  #     - name: Check Formatting (Black)
  #       run: poetry run black paramview tests --check

  #     - name: Lint (Flake8)
  #       run: poetry run flake8 paramview tests

  #     - name: Lint (Pylint)
  #       run: poetry run pylint paramview tests

  #     - name: Mypy cache
  #       uses: actions/cache@v3
  #       with:
  #         path: .mypy_cache
  #         key: mypy-${{ runner.os }}-${{ github.sha }}
  #         restore-keys: |
  #           mypy-${{ runner.os }}-

  #     - name: Type Check (Mypy)
  #       run: poetry run mypy paramview tests

  #     - name: Test (Pytest)
  #       run: poetry run pytest

  # frontend:
  #   runs-on: ubuntu-latest

  #   defaults:
  #     run:
  #       working-directory: frontend

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up frontend
  #       uses: ./.github/actions/set-up-frontend

  #     - name: Lint
  #       run: yarn lint

  #     - name: Unit tests
  #       run: yarn test:unit

  e2e:
    # needs: [backend, frontend]
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up backend
        uses: ./.github/actions/set-up-backend

      - name: Set up frontend
        uses: ./.github/actions/set-up-frontend

      - name: Build frontend
        run: make frontend

      - name: Start backend server
        run: poetry run python frontend/cypress/backend.py start &

      - name: Start frontend server
        working-directory: frontend
        run: yarn preview &

      - name: E2E tests
        working-directory: frontend
        run: yarn test:e2e
