name: Deploy to GitHub Pages

on: workflow_dispatch

env:
  POETRY_VERSION: "1.7.1"
  PYTHON_VERSION: "3.9"
  PACKAGE_NAME: "paramview"
  PACKAGE_VERSION: "0.3.0"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Poetry
        run: pipx install poetry==${{ env.POETRY_VERSION }}

      - name: Set up Python with Poetry cache
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry

      - name: Install Python dependencies
        run: poetry install

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Enable Yarn
        run: corepack enable

      - name: Install Node.js dependencies
        run: yarn

      - name: Build frontend
        run: yarn build

      - name: Build package
        run: poetry build

      - name: Create _site/releases/index.html
        run: |
          mkdir _site
          mkdir _site/releases
          echo '<!DOCTYPE html>
          <html>
            <body>
              <a href="${{ env.PACKAGE_NAME }}/">${{ env.PACKAGE_NAME }}</a>
            </body>
          </html>' > _site/releases/index.html

      - name: Create _site/releases/<package-name>/index.html
        run: |
          mkdir _site/releases/${{ env.PACKAGE_NAME }}
          echo '<!DOCTYPE html>
          <html>
            <body>
              <a href="${{ env.PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}-py3-none-any.whl">
                ${{ env.PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}-py3-none-any.whl
              </a>
              <a href="${{ env.PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}.tar.gz">${{ env.PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}.tar.gz</a>
            </body>
          </html>' > _site/releases/${{ env.PACKAGE_NAME }}/index.html

      - name: Create _site/latest.tar.gz
        run: cp dist/*.tar.gz _site/latest.tar.gz

      - name: Move package files into _site/releases/<package-name>
        run: mv dist/* _site/releases/${{ env.PACKAGE_NAME }}

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v2

  deploy:
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
